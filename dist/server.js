!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){n(1),n(2),e.exports=n(3)},function(e,t,n){"use strict";n.r(t),n.d(t,"Player",(function(){return r}));
/*
 * @Project: FiveM Tools
 * @Author: Samuelds
 * @License: GNU General Public License v3.0
 * @Source: https://github.com/FivemTools/ft_players
*/
class r{constructor(e){for(const t in e)this[t]=e[t]}save(e){if("object"==typeof e){let t="";const n=[];let r;for(let i in e)r=e[i],""!==t&&(t+=", "),t+="?? = ?",n.push(r),n.push(this[r]);n.push(this.id),mysql.execute("UPDATE players SET "+t+" WHERE id = ?",n)}else mysql.execute("UPDATE players SET ?? = ? WHERE id = ?",[e,this[e],this.id])}set(e,t){this[e]=t,mysql.execute("UPDATE players SET ?? = ? WHERE id = ?",[e,t,this.id])}}},function(e,t){
/*
 * @Project: FiveM Tools
 * @Author: Samuelds
 * @License: GNU General Public License v3.0
 * @Source: https://github.com/FivemTools/ft_players
*/
OnClientReady((function(){TriggerServerEvent("ft_player:ClientReady")}))},function(e,t,n){"use strict";n.r(t),n.d(t,"GetPlayerIdentifiers",(function(){return c})),n.d(t,"GetIdentifier",(function(){return s})),n.d(t,"IsPlayerExist",(function(){return l})),n.d(t,"GetPlayers",(function(){return d})),n.d(t,"GetOnlinePlayerFormIdentifier",(function(){return a})),n.d(t,"GetOnlinePlayerFormSource",(function(){return y})),n.d(t,"GetPlayerFormIdentifier",(function(){return p})),n.d(t,"CreatePlayerFormIdentifier",(function(){return E})),n.d(t,"GetPlayerFormId",(function(){return P})),n.d(t,"onPlayerConnecting",(function(){return g})),n.d(t,"onPlayerLeaving",(function(){return v})),n.d(t,"onNewPlayer",(function(){return m}));
/*
 * @Project: FiveM Tools
 * @Author: Samuelds
 * @License: GNU General Public License v3.0
 * @Source: https://github.com/FivemTools/ft_players
*/
const r=exports.ghmattimysql;let i={},o=[],u=[],f=[];function c(e){let t=[];const n=GetNumPlayerIdentifiers(e);for(let r=0;r<n;r++)t[r]=GetPlayerIdentifier(e,r);return t}function s(e){return c(e).find((function(e){return e.startsWith(Settings.system.identifier+":")}))}function l(e){return void 0!==i[e]}function d(){return i}function a(e){for(let t in i)if(t.identifier===e)return t;return!1}function y(e){return!!l(e)&&i[e]}function p(e,t){r.execute("SELECT * FROM players WHERE identifier = ?",[e],(function(e){void 0!==e[0]?t(new Player(e[0])):t(!1)}))}function E(e,t){r.execute("INSERT IGNORE INTO players (`identifier`, `createdAt`) VALUES (?, NOW())",[e],(function(e){P(e.insertId,t)}))}function P(e,t){r.execute("SELECT * FROM players WHERE id = ?",[e],(function(e){void 0!==e[0]?t(new Player(e[0])):t(!1)}))}function g(e){u.push(e)}function v(e){f.push(e)}function m(e){o.push(e)}AddEventHandler("playerConnecting",(function(e,t,n){n.defer(),n.presentCard(Settings.messages.waitCard);const r=s(source);void 0===r&&n.done(Settings.messages.noIdentifier),p(r,(function(e){!1===e?E(r,(function(e){if(!1===e)n.done(Settings.messages.playerNotFound);else if(o.length>0)for(let t in o)o[t](e),t==o.length-1&&(i[r]=e,n.done());else i[r]=e,n.done()})):(i[r]=e,n.done())}))})),AddEventHandler("playerDropped",(function(){if(void 0!==i[source]){let e=i[source];for(let t in f)f[t](e),t==f.length-1&&delete i[source]}const e=s(source);void 0!==i[e]&&delete i[e]})),RegisterNetEvent("ft_player:ClientReady"),AddEventHandler("ft_player:ClientReady",(function(){const e=s(source);i[source]=i[e],delete i[e]}))}]);